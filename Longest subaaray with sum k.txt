Longest Sub-Array with Sum K
Given an array containing N integers and an integer K., Your task is to find the length of the longest Sub-Array with the sum of the elements equal to the given value K.
Example 1:
Input :
A[] = {10, 5, 2, 7, 1, 9}
K = 15
Output : 4
Explanation:
The sub-array is {5, 2, 7, 1}.

Example 2:
Input : 
A[] = {-1, 2, 3}
K = 6
Output : 0
Explanation: 
There is no such sub-array with sum 6.
------------------------------------------------------------Naive Approach(Positive and Negative number)--------------------------------------------------------------
Time Complexity=O(n^2)
space complexity=O(1)

class Solution{
   
    // Function for finding maximum and value pair
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        int sum=0;
        int res=0;
        for(int i=0;i<N;i++)
        { 
            sum=0;
            for(int j=i;j<N;j++)
            {
                sum+=A[j];
                if(sum==K)
                {
                    res=Math.max(res,j-i+1);
                }
            }
        }
        return res;
    }
    
    
}
--------------------------------------------------------------------------------Efficient Approach(Positive number)------------------------------------------------

Time Complexity=O(n)
space complexity=O(1)

class Solution{
    
   
    // Function for finding maximum and value pair
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        
        int res=0;
        int i=0;
        int j=0;
         long sum=0;
           while(j<N)
            {
                 sum+=A[j];
                if(sum<K)
                {
                    j++;
                } 
                if(sum==K)
                {
                    res=Math.max(res,j-i+1);
                    j++;
                }
                if(sum>K)
                {
                   while(sum>K)
                   {
                    sum=sum-A[i];
                    i++;
                   }
                   j++;
                }
               
            
        }
        return res;
    }
    
    
}
