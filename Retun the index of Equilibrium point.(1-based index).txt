Given an array A of n positive numbers. The task is to find the first Equilibrium Point in an array. 
Equilibrium Point in an array is a position such that the sum of elements before it is equal to the sum of elements after it.

Note: Retun the index of Equilibrium point. (1-based index)

Example 1:

Input: 
n = 5 
A[] = {1,3,5,2,2} 
Output: 3 
Explanation:  
equilibrium point is at position 3 
as elements before it (1+3) = 
elements after it (2+2). 
===============================================================efficient soltion===========================================================
Time complexity=O(n)
space complexity=o(1)


class Solution{
    public:
    // Function to find equilibrium point in the array.
    // a: input array
    // n: size of array
    int equilibriumPoint(long long a[], int n) {
    
        // Your code here
        int sum =0;   int leftsum=0;
        for(int i=0;i<n;i++)
        {
            sum+=a[i];
        }
        for(int j=0;j<n;j++)
        {
            sum-=a[j];
            if(sum==leftsum)
            {
                return j+1;
            }
            leftsum+=a[j];
           
        }
        return -1;
    }

};
