Time complexity=o(n^2)
Space complexity=o(1)
-------------------------------Naive --------------------------------------------------

public class MoveZeroToEnd{
	 
static void  MoveZeroToEnd(int Arr[],int n){
for(int i=0;i<n;i++)
{
	if(Arr[i]==0)
	{
		for(int j=i+1;j<n;j++)
		{
			if(Arr[j]!=0)
			{
				int temp=Arr[i];
				Arr[i]=Arr[j];
				Arr[j]=temp;
				break;

			}
		}
	}
}
	
}
 
public static void main(String[] args) {	
	int Arr[]= {8,5,0,10,0,20,0,30};
	int n=Arr.length;
	MoveZeroToEnd(Arr,n);
	for(int i=0;i<n;i++)
	{
		System.out.print(Arr[i]+",");
	}
}
}
--------------------------------------------------------------Efficient solution-------------------------------------------------

Time complexity=o(n)
Space complexity=o(1)

public class MoveZeroToEnd{
	 
static void  MoveZeroToEnd(int Arr[],int n){
	int COUNT=0;
for(int i=0;i<n;i++)
{
	if(Arr[i]!=0)
	{	
				int temp=Arr[i];
				Arr[i]=Arr[COUNT];
				Arr[COUNT]=temp;
		COUNT++;
		
	}
}
	
}
 
public static void main(String[] args) {	
	int Arr[]= {8,5,0,10,0,20,0,30};
	int n=Arr.length;
	MoveZeroToEnd(Arr,n);
	for(int i=0;i<n;i++)
	{
		System.out.print(Arr[i]+",");
	}
}
}