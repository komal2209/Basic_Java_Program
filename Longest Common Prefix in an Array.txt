Longest Common Prefix in an Array
Given an array of N strings, find the longest common prefix among all strings present in the array.


Example 1:

Input:
N = 4
arr[] = {geeksforgeeks, geeks, geek,
         geezer}
Output: gee
Explanation: "gee" is the longest common
prefix in all the given strings.
Example 2:

Input: 
N = 2
arr[] = {hello, world}
Output: -1
Explanation: There's no common prefix
in the given strings.
---------------------------------------------------

class Solution{
    String longestCommonPrefix(String arr[], int n){
        // code here
        String str=arr[0];
    if(n==0)
    {
     return "-1";
    }
     if(n==1)
     {
    return arr[0];
     }
    Arrays.sort(arr);
    int end=Math.min(arr[0].length(),arr[n-1].length());
    int i=0;
    while(i<end && arr[0].charAt(i)==arr[n-1].charAt(i))
    {
        i++;
        
    }
 String result=str.substring(0,i);
 
    return result; 
    }
}
----------------------------------------------------
class Solution{
    String longestCommonPrefix(String arr[], int n){
        // code here
        
        
        
       String result = arr[0];
       
       // Iterate for rest of element in string.
       for(int i = 1; i < n; i++){
            // .indexOf() return index of that substring from string.
            while(arr[i].indexOf(result) != 0){
               
                // update matched substring prefx
                result = result.substring(0, result.length()-1);
               
                // check for empty case. direct return if true..
                if(result.isEmpty()){
                    return "-1";
                }
            }
        }
        return result;
//User function Template for Java
        
        
        
        
        
    }

    
    
}