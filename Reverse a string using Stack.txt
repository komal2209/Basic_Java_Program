Reverse a string
You are given a string S, the task is to reverse the string using stack.

Example 1:
Input: S="GeeksforGeeks"
Output: skeeGrofskeeG
========================================Efficient Approach============================
Time Complexity=O(n)
Space Complexity=O(1)


class Solution {
    
    public String reverse(String S){
        //code here
        
       int start=0;
       int end=S.length()-1;
       char[] ch=S.toCharArray();
       while(start<=end)
       {
           char temp=ch[start];
           ch[start]=ch[end];
           ch[end]=temp;
            start++;
            end--;
       }
      
      String str= new String(ch);  
      return str;
    }

}

========================================Efficient Approach============================
Given a String S, reverse the string without reversing its individual words. Words are separated by dots.

Example 1:

Input:
S = i.like.this.program.very.much
Output: much.very.program.this.like.i
Explanation: After reversing the whole
string(not individual words), the input
string becomes
much.very.program.this.like.i

Example 2:

Input:
S = pqr.mno
Output: mno.pqr
Explanation: After reversing the whole
string , the input string becomes
mno.pqr


Time complexity=O(N)
Space complexit=o(N)

class Solution 
{
    //Function to reverse words in a given string.
    String reverseWords(String S)
    {
        // code here 
        
        String[] str=S.trim().split("\\.");
        String output="";
        for(int i=str.length-1;i>0;i--)
        {
            output+=str[i]+ ".";
        }
        return output + str[0];
    }
}








===================================================leetcode======================================
151. Reverse Words in a String

Companies
Given an input string s, reverse the order of the words.
A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:
Input: s = "the sky is blue"
Output: "blue is sky the"

Example 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.

Example 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
=======================================================================================================
Time complexity=O(N)
Space complexit=o(N)



class Solution {
    public String reverseWords(String s) {
        String[] str=s.trim().split("\\s+");
         String output="";
        for(int i=str.length-1;i>0;i--)
        {
             output+=str[i]+" ";
        }
        return output + str[0];
    }
}

==========================================================================leetcode=====================================

344. Reverse String

Companies
Write a function that reverses a string. The input string is given as an array of characters s.
You must do this by modifying the input array in-place with O(1) extra memory.


Example 1:
Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:

Input: s = ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]

Time complexity=O(N)
Space complexit=o(1)

class Solution {
    public void reverseString(char[] s) {
        int start=0;
        int end=s.length-1;
        while(start<=end)
        {
            char temp=s[start];
            s[start]=s[end];
            s[end]=temp;
            start++;
            end--;
        }
        
    }
}