Check if strings are rotations of each other or not
Given two strings s1 and s2. The task is to check if s2 is a rotated version of the string s1. The characters in the strings are in lowercase.
Example 1:
Input:
geeksforgeeks
forgeeksgeeks
Output: 
1
Explanation: s1 is geeksforgeeks, s2 is
forgeeksgeeks. Clearly, s2 is a rotated
version of s1 as s2 can be obtained by
left-rotating s1 by 5 units.
 

Example 2:
Input:
mightandmagic
andmagicmigth
Output: 
0
Explanation: Here with any amount of
rotation s2 can't be obtained by s1.
---------------------------------------------------------
Time complexity={O(n)+O(1)+O(n)+O(n)}=O(n)
space complexity=O(26) which is nearly constant.

class Solution
{
    //Function to check if two strings are rotations of each other or not.
    public static boolean areRotations(String s1, String s2 )
    {
        // Your code here
                String temp=s1+s1; =====>O(n) (concatenation)

        if(s1.length()!=s2.length())======>O(1) 
        return false;
        if(s1.equals(s2))==========>O(n) worstcase 
        return true;
        
         return temp.indexOf(s2)!=-1;=====>O(n) worstcase
    }
    
}